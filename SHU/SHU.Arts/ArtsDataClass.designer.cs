#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.235
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SHU.Arts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MPTEST")]
	public partial class ArtsDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertArts(Arts instance);
    partial void UpdateArts(Arts instance);
    partial void DeleteArts(Arts instance);
    partial void InsertEnumList(EnumList instance);
    partial void UpdateEnumList(EnumList instance);
    partial void DeleteEnumList(EnumList instance);
    #endregion
		
		public ArtsDataClassDataContext() : 
				base(global::SHU.Arts.Properties.Settings.Default.MPTESTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ArtsDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArtsDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArtsDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArtsDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Arts> Arts
		{
			get
			{
				return this.GetTable<Arts>();
			}
		}
		
		public System.Data.Linq.Table<EnumList> EnumList
		{
			get
			{
				return this.GetTable<EnumList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Arts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _XingMing;
		
		private string _NianJi;
		
		private string _Jie;
		
		private string _XueQi;
		
		private string _KeCheng;
		
		private string _JiangXiang;
		
		private string _ZuoPinLuJing;
		
		private string _ZuoPinMingCheng;
		
		private string _Ji;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnXingMingChanging(string value);
    partial void OnXingMingChanged();
    partial void OnNianJiChanging(string value);
    partial void OnNianJiChanged();
    partial void OnJieChanging(string value);
    partial void OnJieChanged();
    partial void OnXueQiChanging(string value);
    partial void OnXueQiChanged();
    partial void OnKeChengChanging(string value);
    partial void OnKeChengChanged();
    partial void OnJiangXiangChanging(string value);
    partial void OnJiangXiangChanged();
    partial void OnZuoPinLuJingChanging(string value);
    partial void OnZuoPinLuJingChanged();
    partial void OnZuoPinMingChengChanging(string value);
    partial void OnZuoPinMingChengChanged();
    partial void OnJiChanging(string value);
    partial void OnJiChanged();
    #endregion
		
		public Arts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XingMing", DbType="NVarChar(50)")]
		public string XingMing
		{
			get
			{
				return this._XingMing;
			}
			set
			{
				if ((this._XingMing != value))
				{
					this.OnXingMingChanging(value);
					this.SendPropertyChanging();
					this._XingMing = value;
					this.SendPropertyChanged("XingMing");
					this.OnXingMingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NianJi", DbType="NVarChar(10)")]
		public string NianJi
		{
			get
			{
				return this._NianJi;
			}
			set
			{
				if ((this._NianJi != value))
				{
					this.OnNianJiChanging(value);
					this.SendPropertyChanging();
					this._NianJi = value;
					this.SendPropertyChanged("NianJi");
					this.OnNianJiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jie", DbType="NVarChar(10)")]
		public string Jie
		{
			get
			{
				return this._Jie;
			}
			set
			{
				if ((this._Jie != value))
				{
					this.OnJieChanging(value);
					this.SendPropertyChanging();
					this._Jie = value;
					this.SendPropertyChanged("Jie");
					this.OnJieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XueQi", DbType="NVarChar(20)")]
		public string XueQi
		{
			get
			{
				return this._XueQi;
			}
			set
			{
				if ((this._XueQi != value))
				{
					this.OnXueQiChanging(value);
					this.SendPropertyChanging();
					this._XueQi = value;
					this.SendPropertyChanged("XueQi");
					this.OnXueQiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeCheng", DbType="NVarChar(100)")]
		public string KeCheng
		{
			get
			{
				return this._KeCheng;
			}
			set
			{
				if ((this._KeCheng != value))
				{
					this.OnKeChengChanging(value);
					this.SendPropertyChanging();
					this._KeCheng = value;
					this.SendPropertyChanged("KeCheng");
					this.OnKeChengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JiangXiang", DbType="NVarChar(100)")]
		public string JiangXiang
		{
			get
			{
				return this._JiangXiang;
			}
			set
			{
				if ((this._JiangXiang != value))
				{
					this.OnJiangXiangChanging(value);
					this.SendPropertyChanging();
					this._JiangXiang = value;
					this.SendPropertyChanged("JiangXiang");
					this.OnJiangXiangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZuoPinLuJing", DbType="NVarChar(200)")]
		public string ZuoPinLuJing
		{
			get
			{
				return this._ZuoPinLuJing;
			}
			set
			{
				if ((this._ZuoPinLuJing != value))
				{
					this.OnZuoPinLuJingChanging(value);
					this.SendPropertyChanging();
					this._ZuoPinLuJing = value;
					this.SendPropertyChanged("ZuoPinLuJing");
					this.OnZuoPinLuJingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZuoPinMingCheng", DbType="NVarChar(100)", CanBeNull=false)]
		public string ZuoPinMingCheng
		{
			get
			{
				return this._ZuoPinMingCheng;
			}
			set
			{
				if ((this._ZuoPinMingCheng != value))
				{
					this.OnZuoPinMingChengChanging(value);
					this.SendPropertyChanging();
					this._ZuoPinMingCheng = value;
					this.SendPropertyChanged("ZuoPinMingCheng");
					this.OnZuoPinMingChengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ji", DbType="NVarChar(10)")]
		public string Ji
		{
			get
			{
				return this._Ji;
			}
			set
			{
				if ((this._Ji != value))
				{
					this.OnJiChanging(value);
					this.SendPropertyChanging();
					this._Ji = value;
					this.SendPropertyChanged("Ji");
					this.OnJiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class EnumList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EnumType;
		
		private string _Name;
		
		private int _Sort;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEnumTypeChanging(string value);
    partial void OnEnumTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    #endregion
		
		public EnumList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnumType", DbType="nvarchar(10)", CanBeNull=false)]
		public string EnumType
		{
			get
			{
				return this._EnumType;
			}
			set
			{
				if ((this._EnumType != value))
				{
					this.OnEnumTypeChanging(value);
					this.SendPropertyChanging();
					this._EnumType = value;
					this.SendPropertyChanged("EnumType");
					this.OnEnumTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(20)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
