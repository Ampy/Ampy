//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace YLCCS.Web.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class YLDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new YLDBEntities object using the connection string found in the 'YLDBEntities' section of the application configuration file.
        /// </summary>
        public YLDBEntities() : base("name=YLDBEntities", "YLDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new YLDBEntities object.
        /// </summary>
        public YLDBEntities(string connectionString) : base(connectionString, "YLDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new YLDBEntities object.
        /// </summary>
        public YLDBEntities(EntityConnection connection) : base(connection, "YLDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aerobic> Aerobic
        {
            get
            {
                if ((_Aerobic == null))
                {
                    _Aerobic = base.CreateObjectSet<Aerobic>("Aerobic");
                }
                return _Aerobic;
            }
        }
        private ObjectSet<Aerobic> _Aerobic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BasicData> BasicData
        {
            get
            {
                if ((_BasicData == null))
                {
                    _BasicData = base.CreateObjectSet<BasicData>("BasicData");
                }
                return _BasicData;
            }
        }
        private ObjectSet<BasicData> _BasicData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Strength> Strength
        {
            get
            {
                if ((_Strength == null))
                {
                    _Strength = base.CreateObjectSet<Strength>("Strength");
                }
                return _Strength;
            }
        }
        private ObjectSet<Strength> _Strength;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Aerobic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAerobic(Aerobic aerobic)
        {
            base.AddObject("Aerobic", aerobic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BasicData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBasicData(BasicData basicData)
        {
            base.AddObject("BasicData", basicData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Strength EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStrength(Strength strength)
        {
            base.AddObject("Strength", strength);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YLDBModel", Name="Aerobic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aerobic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Aerobic object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="project">Initial value of the Project property.</param>
        /// <param name="exerciseDate">Initial value of the ExerciseDate property.</param>
        /// <param name="recordTime">Initial value of the RecordTime property.</param>
        public static Aerobic CreateAerobic(global::System.String userId, global::System.String project, global::System.DateTime exerciseDate, global::System.DateTime recordTime)
        {
            Aerobic aerobic = new Aerobic();
            aerobic.UserId = userId;
            aerobic.Project = project;
            aerobic.ExerciseDate = exerciseDate;
            aerobic.RecordTime = recordTime;
            return aerobic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Project
        {
            get
            {
                return _Project;
            }
            set
            {
                if (_Project != value)
                {
                    OnProjectChanging(value);
                    ReportPropertyChanging("Project");
                    _Project = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Project");
                    OnProjectChanged();
                }
            }
        }
        private global::System.String _Project;
        partial void OnProjectChanging(global::System.String value);
        partial void OnProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HeartRate
        {
            get
            {
                return _HeartRate;
            }
            set
            {
                OnHeartRateChanging(value);
                ReportPropertyChanging("HeartRate");
                _HeartRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeartRate");
                OnHeartRateChanged();
            }
        }
        private Nullable<global::System.Int32> _HeartRate;
        partial void OnHeartRateChanging(Nullable<global::System.Int32> value);
        partial void OnHeartRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private Nullable<global::System.Decimal> _Speed;
        partial void OnSpeedChanging(Nullable<global::System.Decimal> value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Distance
        {
            get
            {
                return _Distance;
            }
            set
            {
                OnDistanceChanging(value);
                ReportPropertyChanging("Distance");
                _Distance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Distance");
                OnDistanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Distance;
        partial void OnDistanceChanging(Nullable<global::System.Decimal> value);
        partial void OnDistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExerciseDate
        {
            get
            {
                return _ExerciseDate;
            }
            set
            {
                if (_ExerciseDate != value)
                {
                    OnExerciseDateChanging(value);
                    ReportPropertyChanging("ExerciseDate");
                    _ExerciseDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExerciseDate");
                    OnExerciseDateChanged();
                }
            }
        }
        private global::System.DateTime _ExerciseDate;
        partial void OnExerciseDateChanging(global::System.DateTime value);
        partial void OnExerciseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Recorder
        {
            get
            {
                return _Recorder;
            }
            set
            {
                OnRecorderChanging(value);
                ReportPropertyChanging("Recorder");
                _Recorder = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Recorder");
                OnRecorderChanged();
            }
        }
        private global::System.String _Recorder;
        partial void OnRecorderChanging(global::System.String value);
        partial void OnRecorderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordTime
        {
            get
            {
                return _RecordTime;
            }
            set
            {
                OnRecordTimeChanging(value);
                ReportPropertyChanging("RecordTime");
                _RecordTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordTime");
                OnRecordTimeChanged();
            }
        }
        private global::System.DateTime _RecordTime;
        partial void OnRecordTimeChanging(global::System.DateTime value);
        partial void OnRecordTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YLDBModel", Name="BasicData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BasicData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BasicData object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="exerciseDate">Initial value of the ExerciseDate property.</param>
        /// <param name="recordTime">Initial value of the RecordTime property.</param>
        public static BasicData CreateBasicData(global::System.String userId, global::System.DateTime exerciseDate, global::System.DateTime recordTime)
        {
            BasicData basicData = new BasicData();
            basicData.UserId = userId;
            basicData.ExerciseDate = exerciseDate;
            basicData.RecordTime = recordTime;
            return basicData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Decimal> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BloodPressureL
        {
            get
            {
                return _BloodPressureL;
            }
            set
            {
                OnBloodPressureLChanging(value);
                ReportPropertyChanging("BloodPressureL");
                _BloodPressureL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodPressureL");
                OnBloodPressureLChanged();
            }
        }
        private Nullable<global::System.Decimal> _BloodPressureL;
        partial void OnBloodPressureLChanging(Nullable<global::System.Decimal> value);
        partial void OnBloodPressureLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BloodPressureH
        {
            get
            {
                return _BloodPressureH;
            }
            set
            {
                OnBloodPressureHChanging(value);
                ReportPropertyChanging("BloodPressureH");
                _BloodPressureH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodPressureH");
                OnBloodPressureHChanged();
            }
        }
        private Nullable<global::System.Decimal> _BloodPressureH;
        partial void OnBloodPressureHChanging(Nullable<global::System.Decimal> value);
        partial void OnBloodPressureHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExerciseDate
        {
            get
            {
                return _ExerciseDate;
            }
            set
            {
                if (_ExerciseDate != value)
                {
                    OnExerciseDateChanging(value);
                    ReportPropertyChanging("ExerciseDate");
                    _ExerciseDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExerciseDate");
                    OnExerciseDateChanged();
                }
            }
        }
        private global::System.DateTime _ExerciseDate;
        partial void OnExerciseDateChanging(global::System.DateTime value);
        partial void OnExerciseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Recorder
        {
            get
            {
                return _Recorder;
            }
            set
            {
                OnRecorderChanging(value);
                ReportPropertyChanging("Recorder");
                _Recorder = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Recorder");
                OnRecorderChanged();
            }
        }
        private global::System.String _Recorder;
        partial void OnRecorderChanging(global::System.String value);
        partial void OnRecorderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordTime
        {
            get
            {
                return _RecordTime;
            }
            set
            {
                OnRecordTimeChanging(value);
                ReportPropertyChanging("RecordTime");
                _RecordTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordTime");
                OnRecordTimeChanged();
            }
        }
        private global::System.DateTime _RecordTime;
        partial void OnRecordTimeChanging(global::System.DateTime value);
        partial void OnRecordTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="YLDBModel", Name="Strength")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Strength : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Strength object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="project">Initial value of the Project property.</param>
        /// <param name="exerciseDate">Initial value of the ExerciseDate property.</param>
        /// <param name="recordTime">Initial value of the RecordTime property.</param>
        public static Strength CreateStrength(global::System.String userId, global::System.String project, global::System.DateTime exerciseDate, global::System.DateTime recordTime)
        {
            Strength strength = new Strength();
            strength.UserId = userId;
            strength.Project = project;
            strength.ExerciseDate = exerciseDate;
            strength.RecordTime = recordTime;
            return strength;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Project
        {
            get
            {
                return _Project;
            }
            set
            {
                if (_Project != value)
                {
                    OnProjectChanging(value);
                    ReportPropertyChanging("Project");
                    _Project = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Project");
                    OnProjectChanged();
                }
            }
        }
        private global::System.String _Project;
        partial void OnProjectChanging(global::System.String value);
        partial void OnProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Decimal> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Times
        {
            get
            {
                return _Times;
            }
            set
            {
                OnTimesChanging(value);
                ReportPropertyChanging("Times");
                _Times = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Times");
                OnTimesChanged();
            }
        }
        private Nullable<global::System.Int32> _Times;
        partial void OnTimesChanging(Nullable<global::System.Int32> value);
        partial void OnTimesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Groups
        {
            get
            {
                return _Groups;
            }
            set
            {
                OnGroupsChanging(value);
                ReportPropertyChanging("Groups");
                _Groups = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Groups");
                OnGroupsChanged();
            }
        }
        private Nullable<global::System.Int32> _Groups;
        partial void OnGroupsChanging(Nullable<global::System.Int32> value);
        partial void OnGroupsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExerciseDate
        {
            get
            {
                return _ExerciseDate;
            }
            set
            {
                if (_ExerciseDate != value)
                {
                    OnExerciseDateChanging(value);
                    ReportPropertyChanging("ExerciseDate");
                    _ExerciseDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExerciseDate");
                    OnExerciseDateChanged();
                }
            }
        }
        private global::System.DateTime _ExerciseDate;
        partial void OnExerciseDateChanging(global::System.DateTime value);
        partial void OnExerciseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Recorder
        {
            get
            {
                return _Recorder;
            }
            set
            {
                OnRecorderChanging(value);
                ReportPropertyChanging("Recorder");
                _Recorder = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Recorder");
                OnRecorderChanged();
            }
        }
        private global::System.String _Recorder;
        partial void OnRecorderChanging(global::System.String value);
        partial void OnRecorderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordTime
        {
            get
            {
                return _RecordTime;
            }
            set
            {
                OnRecordTimeChanging(value);
                ReportPropertyChanging("RecordTime");
                _RecordTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordTime");
                OnRecordTimeChanged();
            }
        }
        private global::System.DateTime _RecordTime;
        partial void OnRecordTimeChanging(global::System.DateTime value);
        partial void OnRecordTimeChanged();

        #endregion
    
    }

    #endregion
    
}
